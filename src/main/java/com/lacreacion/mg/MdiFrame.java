/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.lacreacion.mg;

import com.lacreacion.mg.utils.CurrentUser;
import com.lacreacion.mg.utils.Varios;
import java.awt.Color;
import java.beans.PropertyChangeEvent;
import java.util.HashMap;
import java.util.Map;
import java.util.prefs.Preferences;
import javax.imageio.ImageIO;
import javax.swing.DesktopManager;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.apache.derby.drda.NetworkServerControl;

/**
 *
 * @author user
 */
public class MdiFrame extends javax.swing.JFrame {

    CurrentUser currentUser = CurrentUser.getInstance();

    JDesktopPane desktop;
    DesktopManager manager;

    Map<String, String> persistenceMap = new HashMap<>();

    /**
     * Creates new form MDIFrame
     */
    public MdiFrame() {
        try {
            persistenceMap = Varios.getDatabaseIP();

            if (Boolean.parseBoolean(Preferences.userRoot().node("MG").get("isServer", "true"))) {
                NetworkServerControl server = new NetworkServerControl();
                server.start(null);
            }
            initComponents();
            lblBG.setIcon(new ImageIcon(ImageIO.read(getClass().getResourceAsStream("/images/g4204.png"))));
            desktop = new JDesktopPane();
            desktop.setBackground(Color.white);
            setContentPane(desktop);
            this.setExtendedState(this.getExtendedState() | JFrame.MAXIMIZED_BOTH);

            currentUser.addPropertyChangeListener((PropertyChangeEvent event) -> {
                if ("user".equals(event.getPropertyName())) {
                    mnuOpRemates.setEnabled(currentUser.hasRole(1));
                    mnuOpPagos.setEnabled(currentUser.hasRole(1));
                    mnuOpColectas.setEnabled(currentUser.hasRole(1));

                    mnuAdMiembros.setEnabled(currentUser.hasRole(2));
                    mnuAdCategoriasTributarias.setEnabled(currentUser.hasRole(3));
                    mnuAdColectas.setEnabled(currentUser.hasRole(3));
                    mnuAdRemates.setEnabled(currentUser.hasRole(3));
                    mnuAdCuotas.setEnabled(currentUser.hasRole(3));
                    mnuAdCat.setEnabled(currentUser.hasRole(2));
                    mnuAdMiembros.setEnabled(currentUser.hasRole(2));

                    mnuAdTransf.setEnabled(currentUser.hasRole(2));
                    mnuAdRecibos.setEnabled(currentUser.hasRole(2));

                    mnuAdIglesia.setEnabled(currentUser.hasRole(3));
                    mnuAdConfig.setEnabled(currentUser.hasRole(3));
                    mnuAdUsuarios.setEnabled(currentUser.hasRole(3));
                    mnuAdGrupos.setEnabled(currentUser.hasRole(3));
                    mnuAdRoles.setEnabled(currentUser.hasRole(3));

                    mnuAdInformes.setEnabled(currentUser.hasRole(1));
                }
            });

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, Thread.currentThread().getStackTrace()[1].getMethodName() + " - " + ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        lblBG = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mnuLogin = new javax.swing.JMenuItem();
        mnuOp = new javax.swing.JMenu();
        mnuOpRemates = new javax.swing.JMenuItem();
        mnuOpPagos = new javax.swing.JMenuItem();
        mnuOpColectas = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        mnuAdMiembros = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        mnuAdColectas = new javax.swing.JMenuItem();
        mnuAdCategoriasTributarias = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        mnuAdRemates = new javax.swing.JMenuItem();
        mnuAdCuotas = new javax.swing.JMenuItem();
        mnuAdCat = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        mnuAdTransf = new javax.swing.JMenuItem();
        mnuAdRecibos = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mnuAdIglesia = new javax.swing.JMenuItem();
        mnuAdUsuarios = new javax.swing.JMenuItem();
        mnuAdGrupos = new javax.swing.JMenuItem();
        mnuAdRoles = new javax.swing.JMenuItem();
        mnuAdConfig = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        mnuAdInformes = new javax.swing.JMenuItem();

        jMenu3.setText("jMenu3");

        jMenuItem1.setText("jMenuItem1");

        jMenuItem4.setText("jMenuItem4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jMenu1.setText("Usuario");

        mnuLogin.setText("Iniciar Sesion");
        mnuLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuLoginActionPerformed(evt);
            }
        });
        jMenu1.add(mnuLogin);

        jMenuBar1.add(jMenu1);

        mnuOp.setText("Operaciones");

        mnuOpRemates.setText("Remates");
        mnuOpRemates.setEnabled(false);
        mnuOpRemates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuOpRematesActionPerformed(evt);
            }
        });
        mnuOp.add(mnuOpRemates);

        mnuOpPagos.setText("Pagos");
        mnuOpPagos.setEnabled(false);
        mnuOpPagos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuOpPagosActionPerformed(evt);
            }
        });
        mnuOp.add(mnuOpPagos);

        mnuOpColectas.setText("Colectas");
        mnuOpColectas.setEnabled(false);
        mnuOpColectas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuOpColectasActionPerformed(evt);
            }
        });
        mnuOp.add(mnuOpColectas);

        jMenuBar1.add(mnuOp);

        jMenu2.setText("Administracion");

        mnuAdMiembros.setText("Administrar Miembros");
        mnuAdMiembros.setEnabled(false);
        mnuAdMiembros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAdMiembrosActionPerformed(evt);
            }
        });
        jMenu2.add(mnuAdMiembros);
        jMenu2.add(jSeparator2);

        mnuAdColectas.setText("Administrar Colectas");
        mnuAdColectas.setEnabled(false);
        mnuAdColectas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAdColectasActionPerformed(evt);
            }
        });
        jMenu2.add(mnuAdColectas);

        mnuAdCategoriasTributarias.setText("Administrar Categorias Tributarias");
        mnuAdCategoriasTributarias.setEnabled(false);
        mnuAdCategoriasTributarias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAdCategoriasTributariasActionPerformed(evt);
            }
        });
        jMenu2.add(mnuAdCategoriasTributarias);
        jMenu2.add(jSeparator3);

        mnuAdRemates.setText("Administrar Remates");
        mnuAdRemates.setEnabled(false);
        mnuAdRemates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAdRematesActionPerformed(evt);
            }
        });
        jMenu2.add(mnuAdRemates);

        mnuAdCuotas.setText("Administrar Cuotas de Remates");
        mnuAdCuotas.setEnabled(false);
        mnuAdCuotas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAdCuotasActionPerformed(evt);
            }
        });
        jMenu2.add(mnuAdCuotas);

        mnuAdCat.setText("Administrar Categorias de Articulos");
        mnuAdCat.setEnabled(false);
        mnuAdCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAdCatActionPerformed(evt);
            }
        });
        jMenu2.add(mnuAdCat);
        jMenu2.add(jSeparator4);

        mnuAdTransf.setText("Administrar Transferencias");
        mnuAdTransf.setEnabled(false);
        mnuAdTransf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAdTransfActionPerformed(evt);
            }
        });
        jMenu2.add(mnuAdTransf);

        mnuAdRecibos.setText("Administrar Recibos");
        mnuAdRecibos.setEnabled(false);
        mnuAdRecibos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAdRecibosActionPerformed(evt);
            }
        });
        jMenu2.add(mnuAdRecibos);
        jMenu2.add(jSeparator1);

        mnuAdIglesia.setText("Administrar Iglesia");
        mnuAdIglesia.setEnabled(false);
        mnuAdIglesia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAdIglesiaActionPerformed(evt);
            }
        });
        jMenu2.add(mnuAdIglesia);

        mnuAdUsuarios.setText("Administrar Usuarios");
        mnuAdUsuarios.setEnabled(false);
        mnuAdUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAdUsuariosActionPerformed(evt);
            }
        });
        jMenu2.add(mnuAdUsuarios);

        mnuAdGrupos.setText("Administrar Grupos");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jMenu1, org.jdesktop.beansbinding.ELProperty.create("${selected}"), mnuAdGrupos, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        mnuAdGrupos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAdGruposActionPerformed(evt);
            }
        });
        jMenu2.add(mnuAdGrupos);

        mnuAdRoles.setText("Administrar Roles");
        mnuAdRoles.setEnabled(false);
        mnuAdRoles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAdRolesActionPerformed(evt);
            }
        });
        jMenu2.add(mnuAdRoles);

        mnuAdConfig.setText("Configuracion del Sistema");
        mnuAdConfig.setEnabled(false);
        mnuAdConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAdConfigActionPerformed(evt);
            }
        });
        jMenu2.add(mnuAdConfig);
        jMenu2.add(jSeparator5);

        mnuAdInformes.setText("Informes");
        mnuAdInformes.setEnabled(false);
        mnuAdInformes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAdInformesActionPerformed(evt);
            }
        });
        jMenu2.add(mnuAdInformes);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblBG, javax.swing.GroupLayout.DEFAULT_SIZE, 1067, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblBG, javax.swing.GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE)
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnuAdMiembrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAdMiembrosActionPerformed
        try {
            FrameMiembros frame = new FrameMiembros();
            frame.setVisible(true);

            desktop.add(frame);

            frame.setSelected(true);
            frame.setMaximum(true);

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, Thread.currentThread().getStackTrace()[1].getMethodName() + " - " + ex.getMessage());
        }
    }//GEN-LAST:event_mnuAdMiembrosActionPerformed

    private void mnuAdCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAdCatActionPerformed
        try {
            FrameCategoriasArticulos frame = new FrameCategoriasArticulos();
            frame.setVisible(true);

            desktop.add(frame);

            frame.setSelected(true);
            frame.setMaximum(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, Thread.currentThread().getStackTrace()[1].getMethodName() + " - " + ex.getMessage());
        }

    }//GEN-LAST:event_mnuAdCatActionPerformed

    private void mnuOpRematesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuOpRematesActionPerformed
        try {
            FrameRematesDetalle frameR = new FrameRematesDetalle();
            frameR.setVisible(true);

            desktop.add(frameR);

            frameR.setSelected(true);
            frameR.setMaximum(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, Thread.currentThread().getStackTrace()[1].getMethodName() + " - " + ex.getMessage());
        }
    }//GEN-LAST:event_mnuOpRematesActionPerformed

    private void mnuOpPagosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuOpPagosActionPerformed
        try {
            FrameRematesPagos frame = new FrameRematesPagos();
            frame.setVisible(true);

            desktop.add(frame);

            frame.setSelected(true);
            frame.setMaximum(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, Thread.currentThread().getStackTrace()[1].getMethodName() + " - " + ex.getMessage());
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_mnuOpPagosActionPerformed

    private void mnuAdConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAdConfigActionPerformed
        try {
            FrameConfig frame = new FrameConfig();
            frame.setVisible(true);

            desktop.add(frame);

            frame.setSelected(true);
            frame.setMaximum(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, Thread.currentThread().getStackTrace()[1].getMethodName() + " - " + ex.getMessage());
        }
    }//GEN-LAST:event_mnuAdConfigActionPerformed

    private void mnuAdTransfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAdTransfActionPerformed
        try {
            FrameTransferencias frame = new FrameTransferencias();
            frame.setVisible(true);

            desktop.add(frame);

            frame.setSelected(true);
            frame.setMaximum(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, Thread.currentThread().getStackTrace()[1].getMethodName() + " - " + ex.getMessage());
            ex.printStackTrace();
        }
    }//GEN-LAST:event_mnuAdTransfActionPerformed

    private void mnuAdRecibosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAdRecibosActionPerformed
        try {
            FrameRecibos frame = new FrameRecibos();
            frame.setVisible(true);

            desktop.add(frame);

            frame.setSelected(true);
            frame.setMaximum(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, Thread.currentThread().getStackTrace()[1].getMethodName() + " - " + ex.getMessage());
        }
    }//GEN-LAST:event_mnuAdRecibosActionPerformed

    private void mnuAdRematesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAdRematesActionPerformed
        try {
            FrameEventosAdmin frame = new FrameEventosAdmin();
            frame.setVisible(true);

            desktop.add(frame);

            frame.setSelected(true);
            frame.setMaximum(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, Thread.currentThread().getStackTrace()[1].getMethodName() + " - " + ex.getMessage());
        }
    }//GEN-LAST:event_mnuAdRematesActionPerformed

    private void mnuAdCuotasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAdCuotasActionPerformed
        try {
            FrameEventoCuotasAdmin frame = new FrameEventoCuotasAdmin();
            frame.setVisible(true);

            desktop.add(frame);

            frame.setSelected(true);
            frame.setMaximum(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, Thread.currentThread().getStackTrace()[1].getMethodName() + " - " + ex.getMessage());
        }
    }//GEN-LAST:event_mnuAdCuotasActionPerformed

    private void mnuAdIglesiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAdIglesiaActionPerformed
        try {
            FrameIglesiaAdmin frame = new FrameIglesiaAdmin();
            frame.setVisible(true);

            desktop.add(frame);

            frame.setSelected(true);
            frame.setMaximum(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, Thread.currentThread().getStackTrace()[1].getMethodName() + " - " + ex.getMessage());
        }
    }//GEN-LAST:event_mnuAdIglesiaActionPerformed

    private void mnuAdInformesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAdInformesActionPerformed
        try {
            FrameInformes frame = new FrameInformes();
            frame.setVisible(true);

            desktop.add(frame);

            frame.setSelected(true);
            frame.setMaximum(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, Thread.currentThread().getStackTrace()[1].getMethodName() + " - " + ex.getMessage());
            ex.printStackTrace();
        }
    }//GEN-LAST:event_mnuAdInformesActionPerformed

    private void mnuOpColectasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuOpColectasActionPerformed
        try {
            FrameColectasDetalle frame = new FrameColectasDetalle();
            frame.setVisible(true);

            desktop.add(frame);

            frame.setSelected(true);
            frame.setMaximum(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, Thread.currentThread().getStackTrace()[1].getMethodName() + " - " + ex.getMessage());
            ex.printStackTrace();
        }
    }//GEN-LAST:event_mnuOpColectasActionPerformed

    private void mnuAdUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAdUsuariosActionPerformed
        try {
            FrameUsuariosAdmin frame = new FrameUsuariosAdmin();
            frame.setVisible(true);

            desktop.add(frame);

            frame.setSelected(true);
            frame.setMaximum(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, Thread.currentThread().getStackTrace()[1].getMethodName() + " - " + ex.getMessage());
            ex.printStackTrace();
        }
    }//GEN-LAST:event_mnuAdUsuariosActionPerformed

    private void mnuAdGruposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAdGruposActionPerformed
        try {
            FrameGruposAdmin frame = new FrameGruposAdmin();
            frame.setVisible(true);

            desktop.add(frame);

            frame.setSelected(true);
            frame.setMaximum(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, Thread.currentThread().getStackTrace()[1].getMethodName() + " - " + ex.getMessage());
            ex.printStackTrace();
        }
    }//GEN-LAST:event_mnuAdGruposActionPerformed

    private void mnuLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuLoginActionPerformed
        try {
            if (mnuLogin.getText().equals("Iniciar Sesion")) {
                FormLogin frame = new FormLogin(this, true);
                frame.setLocationRelativeTo(null);
                frame.setVisible(true);
                if (currentUser.getUser() != null) {
                    mnuLogin.setText("Cerrar Sesion: " + currentUser.getUser().getNombre());
                }
            } else {
                mnuLogin.setText("Iniciar Sesion");
                currentUser.setUser(null);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, Thread.currentThread().getStackTrace()[1].getMethodName() + " - " + ex.getMessage());
            ex.printStackTrace();
        }
    }//GEN-LAST:event_mnuLoginActionPerformed

    private void mnuAdColectasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAdColectasActionPerformed
        try {
            FrameEventosAdmin frame = new FrameEventosAdmin();
            frame.setVisible(true);

            desktop.add(frame);

            frame.setSelected(true);
            frame.setMaximum(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, Thread.currentThread().getStackTrace()[1].getMethodName() + " - " + ex.getMessage());
            ex.printStackTrace();
        }
    }//GEN-LAST:event_mnuAdColectasActionPerformed

    private void mnuAdCategoriasTributariasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAdCategoriasTributariasActionPerformed

    }//GEN-LAST:event_mnuAdCategoriasTributariasActionPerformed

    private void mnuAdRolesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAdRolesActionPerformed
        try {
            FrameRolesAdmin frame = new FrameRolesAdmin();
            frame.setVisible(true);

            desktop.add(frame);

            frame.setSelected(true);
            frame.setMaximum(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, Thread.currentThread().getStackTrace()[1].getMethodName() + " - " + ex.getMessage());
            ex.printStackTrace();
        }
    }//GEN-LAST:event_mnuAdRolesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            /*for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
             System.out.println(info.getName());
             if ("Nimbus".equals(info.getName())) {
             javax.swing.UIManager.setLookAndFeel(info.getClassName());
             break;
             }*/
            javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());

        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MdiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MdiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MdiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MdiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MdiFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JLabel lblBG;
    private javax.swing.JMenuItem mnuAdCat;
    private javax.swing.JMenuItem mnuAdCategoriasTributarias;
    private javax.swing.JMenuItem mnuAdColectas;
    private javax.swing.JMenuItem mnuAdConfig;
    private javax.swing.JMenuItem mnuAdCuotas;
    private javax.swing.JMenuItem mnuAdGrupos;
    private javax.swing.JMenuItem mnuAdIglesia;
    private javax.swing.JMenuItem mnuAdInformes;
    private javax.swing.JMenuItem mnuAdMiembros;
    private javax.swing.JMenuItem mnuAdRecibos;
    private javax.swing.JMenuItem mnuAdRemates;
    private javax.swing.JMenuItem mnuAdRoles;
    private javax.swing.JMenuItem mnuAdTransf;
    private javax.swing.JMenuItem mnuAdUsuarios;
    private javax.swing.JMenuItem mnuLogin;
    private javax.swing.JMenu mnuOp;
    private javax.swing.JMenuItem mnuOpColectas;
    private javax.swing.JMenuItem mnuOpPagos;
    private javax.swing.JMenuItem mnuOpRemates;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the databaseIP
     */
}
